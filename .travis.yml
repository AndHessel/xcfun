language: cpp
sudo: false
dist: trusty

matrix:
  include:
    # 1/ Linux Clang Builds
    - os: linux
      compiler: clang
      addons: &clang34
        apt:
          packages:
            - clang
            - cmake3
            - gfortran
            - swig
      env:
        - CXX_COMPILER='clang++'
        - C_COMPILER='clang'
        - Fortran_COMPILER='gfortran'
        - BUILD_TYPE='Release'
        - PYTHON='--three'
        - COVERAGE=OFF
    - os: linux
      compiler: clang
      addons: &clang35
        apt:
          packages:
            - clang-3.5
            - cmake3
            - gfortran
            - swig
      env:
        - CXX_COMPILER='clang++-3.5'
        - C_COMPILER='clang-3.5'
        - Fortran_COMPILER='gfortran'
        - BUILD_TYPE='Release'
        - PYTHON='--two'
        - COVERAGE=OFF
    - os: linux
      compiler: clang
      addons: &clang38
        apt:
          packages:
            - clang-3.8
            - cmake3
            - gfortran
            - swig
      env:
        - CXX_COMPILER='clang++-3.8'
        - C_COMPILER='clang-3.8'
        - Fortran_COMPILER='gfortran'
        - BUILD_TYPE='Release'
        - PYTHON='--three'
        - COVERAGE=OFF
    # 2/ Linux GCC Builds
    - os: linux
      compiler: gcc
      addons: &gcc48
        apt:
          packages:
            - cmake3
            - g++
            - gcc
            - gfortran
            - swig
      env:
        - CXX_COMPILER='g++'
        - C_COMPILER='gcc'
        - Fortran_COMPILER='gfortran'
        - BUILD_TYPE='Release'
        - PYTHON='--two'
        - COVERAGE=OFF
    - os: linux
      python: 3.6
      compiler: gcc
      addons: &gcc5
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - cmake3
            - g++-5
            - gcc-5
            - gfortran-5
            - swig
      env:
        - CXX_COMPILER='g++-5'
        - C_COMPILER='gcc-5'
        - Fortran_COMPILER='gfortran-5'
        - BUILD_TYPE='Release'
        - PYTHON='--three'
        - COVERAGE=OFF
    - os: linux
      compiler: gcc
      addons: &gcc6
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - cmake3
            - g++-6
            - gcc-6
            - gfortran-6
            - swig
      env:
        - CXX_COMPILER='g++-6'
        - C_COMPILER='gcc-6'
        - Fortran_COMPILER='gfortran-6'
        - BUILD_TYPE='Release'
        - PYTHON='--two'
        - COVERAGE=OFF
    - os: linux
      compiler: gcc
      addons: &gcc7
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - cmake3
            - g++-7
            - gcc-7
            - gfortran-7
            - swig
      env:
        - CXX_COMPILER='g++-7'
        - C_COMPILER='gcc-7'
        - Fortran_COMPILER='gfortran-7'
        - BUILD_TYPE='Release'
        - PYTHON='--three'
        - COVERAGE=OFF
    # 3/ OSX Clang Builds
    - os: osx
      compiler: clang
      env:
        - CXX_COMPILER='clang++'
        - C_COMPILER='clang'
        - Fortran_COMPILER='gfortran'
        - BUILD_TYPE='Release'
        - PYTHON='--two'
        - COVERAGE=OFF
    # 4/ OSX GCC Builds
    - os: osx
      compiler: gcc
      env:
        - CXX_COMPILER='g++'
        - C_COMPILER='gcc'
        - Fortran_COMPILER='gfortran'
        - BUILD_TYPE='Release'
        - PYTHON='--three'
        - COVERAGE=OFF
    # 5/ Linux GCC7 Coverage build
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - cmake3
            - g++-7
            - gcc-7
            - gfortran-7
            - lcov
            - swig
      env:
        - CXX_COMPILER='g++-7'
        - C_COMPILER='gcc-7'
        - Fortran_COMPILER='gfortran-7'
        - BUILD_TYPE='Debug'
        - PYTHON='--three'
        - COVERAGE=ON

before_install:
  - test -n $CC && unset CC
  - test -n $CXX && unset CXX
  - test -n $FC && unset FC

install:
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew update &> /dev/null
      brew cask uninstall --force oclint
      brew upgrade cmake python
      brew install gcc pipenv swig
    elif [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      # pip install --user pipenv --upgrade
      # https://github.com/pypa/pipenv/issues/3224
      pip install --user --upgrade -e git+https://github.com/pypa/pipenv.git#egg=pipenv
    fi
  - pipenv $PYTHON install

before_script:
  - source $(pipenv --venv)/bin/activate
  - python --version
  - cd ${TRAVIS_BUILD_DIR}
  - >
     cmake -Bbuild -H.
     -DCMAKE_CXX_COMPILER=${CXX_COMPILER}
     -DCMAKE_C_COMPILER=${C_COMPILER}
     -DCMAKE_Fortran_COMPILER=${Fortran_COMPILER}
     -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
     -DENABLE_CODE_COVERAGE=${COVERAGE}
     -DENABLE_PYTHON_INTERFACE=ON
     -DPYTHON_EXECUTABLE=$(which python)
     -DCMAKE_INSTALL_PREFIX=$HOME/Software/xcfun

script:
  # Build and install
  - cmake --build build --target install -- --jobs=2 VERBOSE=1
  - cd build
  # Test
  - ctest --output-on-failure --verbose --parallel 2
  # Check that Python bindings are usable from install prefix
  - env PYTHONPATH=$HOME/Software/xcfun/lib/python:$PYTHONPATH python -c 'import xcfun; print(xcfun.xcfun_splash())'

after_success:
  - |
    if [[ "$COVERAGE" = "ON" ]]; then
      cd $TRAVIS_BUILD_DIR
      lcov --version
      lcov --directory . --capture --output-file coverage.info
      lcov --remove coverage.info '/usr/*' --output-file coverage.info
      lcov --remove coverage.info 'external/*' --output-file coverage.info
      lcov --remove coverage.info 'test/*' --output-file coverage.info
      lcov --list coverage.info
      bash <(curl -s https://codecov.io/bash) -X gcov || echo "Codecov did not collect coverage reports"
    fi
