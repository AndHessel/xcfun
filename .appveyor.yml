version: 'build_{build}-{branch}'

platform: x86

build:
  parallel: true

environment:
  # Create expected SHELL variable for pipenv.
  SHELL: "windows"
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      GENERATOR: "MinGW Makefiles"
      BUILDFLAGS: "VERBOSE=1"
      CMAKARGS: "-DCMAKE_Fortran_COMPILER=gfortran"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      GENERATOR: "Visual Studio 14 2015"
      BUILDFLAGS: "/verbosity:normal"
      CMAKEARGS: "-DCMAKE_TOOLCHAIN_FILE=C:/tools/vcpkg/scripts/buildsystems/vcpkg.cmake -DENABLE_FC_SUPPORT=OFF"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      GENERATOR: "Visual Studio 15 2017"
      BUILDFLAGS: "/verbosity:normal"
      CMAKEARGS: "-DCMAKE_TOOLCHAIN_FILE=C:/tools/vcpkg/scripts/buildsystems/vcpkg.cmake -DENABLE_FC_SUPPORT=OFF"

init:
  # Workaround for CMake not wanting sh.exe on PATH for MinGW
  - set PATH=%PATH:C:\Program Files (x86)\Git\bin;=%
  - set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - ps: >-
      if (($env:GENERATOR -eq "MinGW Makefiles")) {
        $env:PATH += ";C:\\MinGW\\bin"
      }
  - set PATH=%PATH%;C:\tools\vcpkg
  - ps: >-
      if (($env:GENERATOR -eq "Visual Studio 14 2015") -or ($env:GENERATOR -eq "Visual Studio 15 2017")) {
        vcpkg integrate install
      }

build_script:
  - cmake -H. -Bbuild -G"%GENERATOR%" %CMAKEARGS%
  - cmake --build build -- %BUILDFLAGS%

test_script:
  - cd build
  - ctest --output-on-failure --verbose
